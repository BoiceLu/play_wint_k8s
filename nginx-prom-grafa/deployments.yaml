# nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx-container
        image: registry.k8s.io/nginx-slim:0.8
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 20
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# prometheus.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  serviceName: prometheus-service
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          livenessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 20
            timeoutSeconds: 5
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--web.enable-lifecycle"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  labels:
    app: prometheus
spec:
  type: LoadBalancer
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
---
# grafana.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: datasources-volume
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-volume
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards-json-volume
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: datasources-volume
          configMap:
            name: grafana-datasources-provision
        - name: dashboards-volume
          configMap:
            name: grafana-dashboards-provision
        - name: dashboards-json-volume
          configMap:
            name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  labels:
    app: grafana
spec:
  type: LoadBalancer
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
---
## kube-summary-exporter
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-summary-exporter
  labels:
    app: exporter
spec:
  selector:
    matchLabels:
      app: kube-summary-exporter
  template:
    metadata:
      name: kube-summary-exporter
      labels:
        app: kube-summary-exporter
    spec:
      serviceAccountName: kube-summary-exporter
      containers:
        - name: kube-summary-exporter
          image: quay.io/utilitywarehouse/kube-summary-exporter:latest
          ports:
          - containerPort: 9779
---
apiVersion: v1
kind: Service
metadata:
  name: kube-summary-exporter
  labels:
    app: exporter
spec:
  type: LoadBalancer
  selector:
    app: kube-summary-exporter
  ports:
    - port: 9779
      targetPort: 9779
---
## kube-state-metrics
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: 2.10.0
    app: exporter
  name: kube-state-metrics
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: 2.10.0
    spec:
      automountServiceAccountToken: true
      containers:
      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
        name: kube-state-metrics
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 5
      serviceAccountName: kube-state-metrics
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: 2.10.0
    app: exporter
  name: kube-state-metrics
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
  - name: telemetry
    port: 8081
    targetPort: telemetry
  selector:
    app.kubernetes.io/name: kube-state-metrics
---
## node-exporter
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  labels:
    app: exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:latest
          ports:
          - containerPort: 9100
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  labels:
    app: exporter
spec:
  type: LoadBalancer
  selector:
    app: node-exporter
  ports:
    - port: 9100
      targetPort: 9100

